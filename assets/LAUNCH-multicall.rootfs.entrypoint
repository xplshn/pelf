#!/bin/sh

[ "$DEBUG" = "1" ] && set -x

# Strip the first character from ARGS and ARGV0 (assuming it's '!')
ARGS="$(echo "$ARGS" | cut -c2-)"
ARGV0="$(echo "$ARGV0" | cut -c2-)"

_cat() {
    files="$*"
    for file in $files; do
        while IFS= read -r line || [ -n "$line" ]; do
            printf '%s\n' "$line"
        done <"$file"
    done
} ; FALLBACK=$(_cat /usr/local/bin/default)

# Split ARGS into command and its arguments
set -- $ARGS
CMD="$1"
shift # Remove the command from the list, leaving the arguments in $@

# Check if ARGV0 is available as a command. We remove the "./" that might prepend ARGV0
if command -v "${ARGV0%.*}" >/dev/null 2>&1; then
    # If ARGV0 is available, execute ARGV0 with its arguments
    exec "${ARGV0%.*}" "$ARGS" # Because ARGS' first element was not in fact the CMD
elif command -v "$CMD" >/dev/null 2>&1; then
    # If CMD (the first part of ARGS) is available, execute it with remaining arguments
    exec "$CMD" "$@"
elif command -v "$FALLBACK" >/dev/null 2>&1; then
    exec "$FALLBACK" "$@"
else
    echo "Error: Neither ARGV0 ('${ARGV0%.*}') nor ARGS ('$CMD') are available in \$PATH"
    exit 1
fi
